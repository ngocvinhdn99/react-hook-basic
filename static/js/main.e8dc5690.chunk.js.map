{"version":3,"sources":["components/Hero/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Hero","props","name","console","log","defaultProps","React","memo","App","useState","count","setCount","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAWA,SAASA,EAAKC,GACV,IAAQC,EAASD,EAATC,KAGR,OAFAC,QAAQC,IAAI,gBAAiBF,GAGzB,8CACgBA,KAVxBF,EAAKK,aAAe,CAChBH,KAAM,IAcKI,UAAMC,KAAKP,GCKXQ,MAjBf,SAAaP,GACX,MAA0BQ,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OACE,sBAAKC,UAAU,MAAf,UACE,kDAEA,4BAAIF,IACJ,wBAAQG,QAAS,WAAQF,EAASD,EAAQ,IAA1C,sBAEA,cAAC,EAAD,CAAMR,KAAK,gBAAgBW,QATP,mBCDXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e8dc5690.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nHero.propTypes = {\r\n    name: PropTypes.string,\r\n};\r\n\r\nHero.defaultProps = {\r\n    name: ''\r\n}\r\n\r\nfunction Hero(props) {\r\n    const { name } = props\r\n    console.log('Hero render: ', name)\r\n\r\n    return (\r\n        <div>\r\n            Hero name: {name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Hero);","import React, { useState } from 'react';\nimport './App.scss'\nimport PropTypes from 'prop-types';\nimport Hero from './components/Hero';\n\nApp.propTypes = {\n\n};\n\n\nfunction App(props) {\n  const [count, setCount] = useState(0)\n\n  const handleHeroClick = () => { }\n\n  return (\n    <div className=\"app\">\n      <h1>React Hook Basic</h1>\n\n      <p>{count}</p>\n      <button onClick={() => { setCount(count + 1) }}>Increase</button>\n\n      <Hero name=\"Easy Frontend\" onClick={handleHeroClick} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}